/*
 * @LastEditors: 尉旭胜(Riansin)
 * @Author: 尉旭胜(Riansin)
 */
import React, { useEffect, useState,useContext,useMemo } from 'react';
import { Context } from '../..';
import {observer} from "mobx-react-lite";
import { Outlet, useLocation,useNavigate} from 'react-router-dom';
import './nav.css';
import TextChunk from '../chunk/text-chunk';


function NavUI(props) {
    const location = useLocation();
    const navigate = useNavigate();
    const pathData = useContext(Context);
    useEffect(() => {
        window.onpopstate = function () {
            pathData.pop_Path()
        }
    }, [])
    function pathChange(e) {
        pathData.popIndex_Path(e.target.dataset.id, window.history);

        console.log('his',navigate);
    }
    return (
        <>
        <nav className='nav'>
        <div className='nav-center-box'>
            <div className='nav-crumbs'>
                <TextChunk Class='nav-patn-box' content='' fontSize={20} svgwidth={22}  lineheight=' _'>
                    <svg t="1646639698239" class="icon" viewBox="0 0 1048 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="6029" width="200" height="200"><path d="M78.000005 648.75464c13.589506 148.829653 139.118478 265.783319 291.427372 265.783319 149.515269 0 273.222755-112.706945 290.557562-257.637802C441.22254 792.651958 255.420833 547.938514 78.000005 648.75464zM78.000005 648.75464c13.589506 148.829653 139.118478 265.783319 291.427372 265.783319 149.515269 0 273.222755-112.706945 290.557562-257.637802C441.22254 792.651958 255.420833 547.938514 78.000005 648.75464zM78.000005 648.75464c13.589506 148.829653 139.118478 265.783319 291.427372 265.783319 149.515269 0 273.222755-112.706945 290.557562-257.637802C441.22254 792.651958 255.420833 547.938514 78.000005 648.75464z" p-id="6030" fill="#707070"></path><path d="M709.635756 590.323856c-1.289366-14.07046-14.653745-48.044226-34.597983-69.062935l-216.234833-211.650421c-31.04711-27.567869-66.668399-29.287023-89.334631-29.287023-188.666964 0-341.620541 152.933111-341.620541 341.620541 0 188.646498 152.953577 341.600075 341.620541 341.600075s341.620541-152.953577 341.620541-341.600075C711.08885 611.281167 710.597663 600.720647 709.635756 590.323856zM369.468309 329.298911c17.999956 0 38.609343 1.289366 56.04648 16.260335l214.495212 209.951733c11.225669 12.19781 19.841907 33.789571 20.803815 39.315424 0.839111 8.912997 1.258667 18.020422 1.258667 27.097148 0 11.839653-0.706081 23.505343-2.087545 34.976606-17.334807 144.930857-141.042293 257.637802-290.557562 257.637802-152.308895 0-277.837866-116.953665-291.427372-265.783319-0.808412-8.841366-1.217734-17.785062-1.217734-26.831089C76.78227 460.56863 208.133854 329.298911 369.468309 329.298911z" p-id="6031" fill="#707070"></path><path d="M716.474511 474.748584c0 0-12.499685 22.74605-37.341466-1.488911-24.842805-24.234961-132.243907-129.011282-156.086941-152.266939-23.843034-23.236214 2.488681-36.34272 2.488681-36.34272l34.403554-20.453844c0 0 23.157419-12.656251 44.022633 7.718799s98.40931 95.999424 121.273041 118.314663 8.600889 47.15702 8.600889 47.15702L716.474511 474.748584z" p-id="6032" fill="#707070"></path><path d="M582.820488 39.480176l23.215748 47.039339 61.910025 8.992815c10.462283 1.547239 11.735275 6.191003 4.074805 14.243399l-44.394093 43.258223 10.246365 59.832713c1.37123 8.639774-6.955412 13.674441-14.32117 8.639774l-52.485375-27.38879-53.426817 28.074406c-7.150864 3.663436-14.497179 1.312902-13.165858-8.718569l10.050913-60.440557-43.161009-41.906435c-8.365528-7.699356-4.016477-14.713097 5.64251-15.987113l59.127655-8.581446c0 0 12.127202-24.607444 23.196305-47.000454C567.362425 24.473391 576.198674 24.707728 582.820488 39.480176z" p-id="6033" fill="#707070"></path><path d="M917.858101 235.455593l32.032554 64.887846 85.400019 12.401448c14.399965 2.13564 16.182564 8.522094 5.623068 19.631106l-61.243853 59.69559 14.164604 82.520435c1.90028 11.930727-9.619078 18.866696-19.787672 11.930727l-72.411193-37.772278-73.684186 38.733163c-9.894348 5.054109-20.023032 1.802042-18.181081-12.028964l13.851473-83.382059-59.558467-57.834196c-11.520381-10.618848-5.505387-20.297278 7.797593-22.060435l81.560574-11.833513c0 0 16.731056-33.932834 31.992645-64.847937C896.522167 214.747969 908.728163 215.080543 917.858101 235.455593z" p-id="6034" fill="#707070"></path></svg>
                </TextChunk>
                {pathData.page_data.map((item, index) => {
                    return item.pathname === '/' ? <><TextChunk Class='' data={{'data-id': index}} key={index} content={item.icon + '  ' + item.title } onClick={pathChange} url={item.pathname} fontSize={15}></TextChunk></> :
                        <>
                        &nbsp; /&nbsp; <TextChunk key={index} data={{'data-id': index}} content={ item.icon + '  ' + item.title } url={item.pathname} onClick={pathChange} fontSize={15}></TextChunk>
                        </>
                })}
            
        </div>
        <div className='nav-menu'>

            <TextChunk Class='nav-center' content='分享' url='/share' fontSize={14}></TextChunk>


            <TextChunk Class='nav-center' content='简历' url='/share' fontSize={14}></TextChunk>


            <TextChunk Class='nav-center' content='➠' url='/share' fontSize={18}></TextChunk>


            <TextChunk Class='nav-center' content='➠' url='/share' fontSize={18}></TextChunk>

        </div>
        </div>
            </nav>
            <Outlet></Outlet>
            </>);
}

const Nav = observer(NavUI)

export default Nav;
